# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish to NuGet
on:
  workflow_dispatch:
  release:
    types: [published]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget
  SOLUTION_FILE_PATH: S7UaLib.sln
  PROJECT_TO_PACK_PATH: S7UaLib/S7UaLib.csproj
  TARGET_FRAMEWORK: 'net8.0'
  CONFIGURATION: 'Release'

defaults:
  run:
    shell: pwsh

jobs:
  build_test_pack_and_deploy:
    name: Build, Test, Pack and Deploy
    runs-on: windows-latest
    
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore Solution for net8.0
        run: dotnet restore ${{ env.SOLUTION_FILE_PATH }} -p:TargetFramework=${{ env.TARGET_FRAMEWORK }}
        
      - name: Build Solution for net8.0
        run: dotnet build ${{ env.SOLUTION_FILE_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore -p:TargetFramework=${{ env.TARGET_FRAMEWORK }}
        
      - name: Run Tests for net8.0
        run: dotnet test ${{ env.SOLUTION_FILE_PATH }} --no-build --configuration ${{ env.CONFIGURATION }} --framework ${{ env.TARGET_FRAMEWORK }} --filter "Category!=Integration"
      
      - name: Create NuGet Package for net8.0
        run: dotnet pack ${{ env.PROJECT_TO_PACK_PATH }} --configuration ${{ env.CONFIGURATION }} --output ${{ env.NuGetDirectory }} --no-build -p:TargetFramework=${{ env.TARGET_FRAMEWORK }}
        
      - name: Publish NuGet package to NuGet.org
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --skip-duplicate --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json 
          }